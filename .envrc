export ANSIBLE_ROLE_PATH=$(pwd)/roles
export PACKER_LOG=1
export PACKER_LOG_PATH=/var/log/packer.log
export PYENV=3.9.13

# install pyenv global version first $PYENV
echo -e '\e[0;32m'
echo "reminder to install pyenv install $PYENV.."
echo 'sudo apt install make build-essential tk-dev bzip2 libbz2-dev libreadline-dev libsqlite3-dev  libssl-dev libffi-dev'
echo 'CFLAGS="-I$(brew --prefix xz)/include" LDFLAGS="-L$(brew --prefix xz)/lib" CONFIGURE_OPTS="--with-openssl=$(brew --prefix openssl)" pyenv install 3.9.13'
echo
echo 'checking pyenv version'
echo 'pyenv versions --bare'
echo
echo 'also adding to .bashrc'
echo
echo 'eval "$(pyenv init -)"'
echo 'eval "$(direnv hook bash)"'
echo -e '\e[0m'

# entering pyenv
# https://www.digitalocean.com/community/tutorials/how-to-manage-python-with-pyenv-and-direnv

# upgrade pip from pyenv
pyenv shell ${PYENV}
pip install --upgrade pip

pyenv local ${PYENV}
# check if python version is set in current dir
if [ -f ".python-version" ] ; then
    if [ ! -d ".venv" ] ; then
        echo "Installing virtualenv for $(python -V)"
        # if we didn't install `py2venv` for python 2.x, we would need to use
        # `virtualenv`, which you would have to install separately.
        python -m venv .venv
    fi
    echo "Activating $(python -V) virtualenv"
    source .venv/bin/activate
fi
# announce python version and show the path of the current python in ${PATH}
echo "Virtualenv has been activated for $(python -V)"
echo "$(which python)"
